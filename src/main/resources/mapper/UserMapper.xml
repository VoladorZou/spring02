<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="state" jdbcType="BIT" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pwd, real_name, phone, email, department_id, `state`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="login" parameterType="com.example.demo.entity.User" resultType="com.example.demo.entity.User">
    select *
    from user
    where id = #{id,jdbcType=INTEGER}  and pwd = #{pwd,jdbcType=VARCHAR}
  </select>

  <select id="check" parameterType="java.lang.Integer" resultType="com.example.demo.entity.User">
    select *
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="checkOnPhone" parameterType="java.lang.String" resultType="com.example.demo.entity.User">
    select *
    from user
    where phone = #{phone,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.demo.entity.User" useGeneratedKeys="true">
    insert into user (pwd, real_name, phone,
      email, department_id, `state`
      )
    values (#{pwd,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, #{state,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.demo.entity.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pwd != null">
        pwd,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.User">
    update user
    <set>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="changePwd" parameterType="com.example.demo.entity.User">
         update user
         set pwd = #{pwd,jdbcType=VARCHAR}
         where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="changePhone" parameterType="com.example.demo.entity.User">
         update user
         set phone = #{phone,jdbcType=VARCHAR}
         where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="setPwd" parameterType="com.example.demo.entity.User">
         update user
         set pwd = #{pwd,jdbcType=VARCHAR}
         where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="setState" parameterType="com.example.demo.entity.User">
         update user
         set `state` = #{state,jdbcType=BIT}
         where id = #{id,jdbcType=INTEGER} and pwd = #{pwd,jdbcType=VARCHAR}
  </update>

  <update id="setPhone" parameterType="com.example.demo.entity.User">
         update user
         set phone = #{phone,jdbcType=VARCHAR}
         where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User">
    update user
    set pwd = #{pwd,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      `state` = #{state,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>